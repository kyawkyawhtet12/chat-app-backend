// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // or your preferred database
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  ChatRoomUser ChatRoomUser[]
}

model ChatRoom {
  id          Int       @id @default(autoincrement())
  name        String
  messages    Message[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  ChatRoomUser ChatRoomUser[]
}

model ChatRoomUser {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field (used in the `@relation` attribute above)
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, chatRoomId])
}



model Message {
  id         Int       @id @default(autoincrement())
  content    String
  sentAt     DateTime  @default(now())
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
  chatRoomId Int
  chatRoom   ChatRoom  @relation(fields: [chatRoomId], references: [id])
}